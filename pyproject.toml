[metadata]
description-file = "README.md"

[build-system]
requires = ["poetry>=1,<2", "coverage[toml]>=5,<6", "virtualenv>=20.2"]
build-backend = "poetry.masonry.api"


#########################################################################################
# Poetry metadata
#########################################################################################

[tool.poetry]
name = "chemfish"
version = "0.1.0"
description = "Zebrafish behavioral profiling and visualization in Python."
include = [
    "README.md",
    "LICENSE.txt",
    "CHANGES.md"
]
authors = ["Douglas Myers-Turnbull"]
maintainers = ["Douglas Myers-Turnbull"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["zebrafish", "behavior", "data science", "bioinformatics", "cheminformatics"]
homepage = "https://github.com/dmyersturnbull/chemfish"
repository = "https://github.com/dmyersturnbull/chemfish"
documentation = "https://chemfish.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Natural Language :: English",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
	"Intended Audience :: Developers",
	"Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Cheminformatics",
	'Typing :: Typed'
]


[tool.poetry.urls]
CI = "https://github.com/dmyersturnbull/sauronlab/actions"
Issues = "https://github.com/dmyersturnbull/sauronlab/issues"
Download = "https://pypi.org/project/sauronlab/"


#########################################################################################
# Poetry build & dependencies
#########################################################################################

[tool.poetry.dependencies]
python                         = ">=3.8, <4"
clana                          = "^0.4"
cycler                         = ">=0.10, <1.0"
fuzzywuzzy                     = ">=0.18, <1.0"
h5py                           = "^3.1"
joblib                         = "^1.0"
librosa                        = "^0.8"
matplotlib                     = ">=3.3, <4.0"
natsort                        = "^7"
numpy                          = ">=1.20, <2.0"
pandas                         = ">=1.2, <2.0"
peewee                         = ">=3.14, <4.0"
pillow                         = "^8"
pydub                          = ">=0.24, <1.0"
requests                       = ">=2.25, <3"
scipy                          = ">=1.6, <2.0"
scikit-learn                   = ">=0.24, <1.0"
soundfile                      = ">=0.10, <1.0"
statsmodels                    = ">=0.12, <1.0"
typer                          = ">=0.3, <1.0"

decorateme                     = ">=0.2, <1.0"
typeddfs                       = ">=0.4, <1.0"
# we're actually using "biochem" too, but we don't need any extra dependencies
#pocketutils                    = {version=">=0.4, <1.0", extras=["tools", "notebooks", "plotting"]}
pocketutils                    = {version=">=0.4, <1.0"}
#valarpy                        = "^3.0"

python-levenshtein             = {optional = true, version="^0.12"}

[tool.poetry.dev-dependencies]
pre-commit               = ">=2.9, <3.0"
pre-commit-hooks         = ">=3.4, <4.0"
bandit                   = ">=1.7, <2.0"
black                    = {git = "https://github.com/psf/black.git", rev="692c0f50d91"}
pytest                   = "^6"
coverage                 = {extras = ["toml"], version = "^5"}
pytest-cov               = "^2"
flake8                   = "^3"
flake8-docstrings        = "^1"
flake8-bugbear           = "^20"
mypy                     = ">=0.790, <1.0"
sphinx                   = "^3"
sphinx-autoapi           = "^1"
sphinx-copybutton        = ">=0.3, <1.0"
sphinx-rtd-theme         = ">=0.5, <1.0"

[tool.poetry.extras]


#########################################################################################
# Tyrannosaurus
#########################################################################################

[tool.tyrannosaurus.sources]
doc_license        = "'CC BY 4.0'"
doc_license_url    = "'https://creativecommons.org/licenses/by/4.0'"
metavm             = "'ubuntu-20.04'"
metavmbox          = "'ubuntu/focal64'"
pymetaversion      = "'3.9'"
pycompatversions   = "tool.poetry.dependencies"
pytoxversions      = "tool.poetry.dependencies"
status             = "'Development'"
date               = "'${today}'"
version            = "tool.poetry.version"
release            = "tool.poetry.version"
devdeps            = "tool.poetry.dev-dependencies"
precommitvr        = "tool.poetry.dev-dependencies"
precommitconfigvr  = "tool.poetry.dev-dependencies"
linelength         = "tool.black.line-length"
copyright          = "'Douglas Myers-Turnbull 2016â€“2021'"
authors            = [
    "Douglas Myers-Turnbull <github:dmyersturnbull,orcid:0000-0003-3610-4808>"
]
contributors = [
	"Chris S Ki <github:chriski777>",
	"Cole Helsell <github:chelsell,orcid:0000-0002-8869-3125>"
]

maintainers        = "tool.tyrannosaurus.sources.authors"

importorderstyle   = "'google'"
docstringstyle     = "'google'"

[tool.tyrannosaurus.sources.flake8skip]
# 212 and 213 contradict; 203 and 204 contradict; D302 is not relevant in Py3
# D107 isn't needed sometimes; and the rest are overly picky
all   = "'W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293'"
test  = "'D100,D101,D102,D103,D104,S101,W503,E203,E225,E301,E302,E501,D107,D200,D205,D400,D403,D409,D410,D411,D212,W391,W293'"

[tool.tyrannosuarus.paths]
recipe             = "'recipes/sauronlab/meta.yaml'"
environment        = "'environment.yml'"

[tool.tyrannosaurus.targets]
pyproject    = true
init         = true
precommit    = true
tox          = true
docs         = true
recipes      = true
license      = true
authors      = true
github       = true
travis       = true
scrutinizer  = true
dockerfile   = true
readme       = true
changelog    = true
citation     = true
codemeta     = true
headers      = false
environment  = false


#########################################################################################
# Testing
#########################################################################################

# This will be used in a future version of pytest:
#[tool.pytest]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"


#########################################################################################
# Changelog generation
#########################################################################################

[tool.commitizen]
name = "cz_conventional_commits"

#########################################################################################
# Style checking
#########################################################################################

[tool.coverage.paths]
source = ["sauronlab"]

[tool.coverage.run]
source = ["sauronlab"]

[tool.coverage.report]
show_missing = true

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.isort]
line_length = 100

# ------- THE FOLLOWING ARE NOT USED BY THEIR RESPECTIVE TOOLS  --------
# --- There are open discussions about supporting pyproject for each ---
# https://github.com/python/mypy/issues/5205
# https://github.com/PyCQA/bandit/issues/606
# https://github.com/PyCQA/pycodestyle/issues/813
# https://github.com/PyCQA/pydocstyle/issues/447

[tool.bandit]

[tool.pycodestyle]
max-line-length = 100
statistics = true

[tool.pydocstyle]
